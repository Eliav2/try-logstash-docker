# http input on port 8080
input {
  http {
    host => "0.0.0.0"
    port => 8080
    add_field => { "[@metadata][client_ip]" => "%{[headers][x-forwarded-for]}" }
    user => "myuser"
    password => "mypassword"
    response_headers => {
      "Content-Type" => "application/json"
      "Access-Control-Allow-Origin" => "*"
      "Access-Control-Allow-Methods" => "OPTIONS,POST,PUT,DELETE"
      "Access-Control-Allow-Headers" => "Content-Type,X-Requested-With,Authorization"
    }
  }
}

filter {
  if [headers][authorization] {
    # Here, we're using an external authentication service to validate the credentials.
    # You'll need to replace this with your own authentication logic.
    # If authentication fails, the event will be dropped and will not be forwarded to the output.
    ruby {
      code => "
        require 'net/http'
        require 'uri'
        require 'json'

        uri = URI('https://my.auth.server.com/validate')
        req = Net::HTTP::Post.new(uri)
        req['Content-Type'] = 'application/json'
        req.body = { user: 'myuser', password: 'mypassword' }.to_json
        res = Net::HTTP.start(uri.hostname, uri.port, use_ssl: true) { |http| http.request(req) }

        if res.is_a?(Net::HTTPSuccess)
          event.cancel if JSON.parse(res.body)['


# output to stdout
output {
  stdout { codec => rubydebug }
}


